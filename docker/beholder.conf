# report internal stats to stdout every minute
flow {
    from timer 60 seconds;
    parse beholder-stats;
    set $curtime time;
    set $payload '$curtime $payload';
    to stdout;
}

flow {
    from udp 3820;
    parse syslog;
    to stdout;
}

## listen on a UDP port and write every incoming packet as a line into a file
#flow {
#    from udp 1234;
#    to file /var/log/beholder/from-udp-1234.log;
#}

## receive nginx access log over UDP and write it into a file
#flow {
#    from udp 3820;
#    parse syslog;
#    to file '.../access.log';
#}

## send internal beholder log as syslog over UDP
#flow {
#    from internal-log;
#    set $payload syslog;
#    to udp 1234;
#}

## receive nginx logs by UDP and send them into syslog-ng over TCP
#flow {
#    from udp 3820;
#    parse syslog; # convert bsd-syslog into beholder fields
#
#    set $payload syslog; # convert beholder fields into ietf-syslog
#    set $payload "$payload\n";
#    set $payload prefix-with-length; # syslog-ng wants the message to be prefixed with its length and a space
#    to tcp 10.64.1.1:5142;
#}
