group 'ru.agalkin'
version '0.1'

buildscript {
    ext.kotlin_version = '1.2.41'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

//kotlin {
//    experimental {
//        coroutines 'enable'
//    }
//}

jar {
    baseName = "beholder"

    manifest {
        attributes "Main-Class": "ru.agalkin.beholder.MainKt"
    }

    def process = './version.sh -f'.execute()
    def stdout = new StringBuffer()
    def stderr = new StringBuffer()
    process.consumeProcessOutput(stdout, stderr)

    println('--- version detection ---')
    print(stdout)
    println('--- /stdout ---')
    print(stderr)
    println('--- /stderr ---')

    def exitCode = process.waitFor()
    if (exitCode != 0) {
        throw new Exception('Could not execute version.sh, exit code ' + exitCode)
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    // compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.2"
    compile "commons-cli:commons-cli:1.4"
    compile "com.google.code.gson:gson:2.8.2"

    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
